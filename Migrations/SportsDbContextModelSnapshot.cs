// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsManagementSystem.Data;

namespace SportsManagementSystem.Migrations
{
    [DbContext(typeof(SportsDbContext))]
    partial class SportsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportsManagementSystem.Models.Competitor", b =>
                {
                    b.Property<int>("CompetitorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Salutation")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompetitorId");

                    b.ToTable("Competitors");

                    b.HasData(
                        new
                        {
                            CompetitorId = 1,
                            Country = "Cambodia",
                            Dob = new DateTime(1980, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "skajan@att.net",
                            Gender = "Male",
                            Name = "Jani Hosea",
                            Salutation = 1
                        },
                        new
                        {
                            CompetitorId = 2,
                            Country = "Guinea",
                            Dob = new DateTime(1980, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lukka@msn.com",
                            Gender = "Female",
                            Name = "Petrina Bassi",
                            Salutation = 2
                        },
                        new
                        {
                            CompetitorId = 3,
                            Country = "Ukraine",
                            Dob = new DateTime(1980, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "majordick@live.com",
                            Gender = "Male",
                            Name = "Antione Yearta",
                            Salutation = 0
                        },
                        new
                        {
                            CompetitorId = 4,
                            Country = "Sri Lanka",
                            Dob = new DateTime(1980, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "galbra@optonline.net",
                            Gender = "Female",
                            Name = "Ashton Tackett",
                            Salutation = 2
                        },
                        new
                        {
                            CompetitorId = 5,
                            Country = "Western Sahara",
                            Dob = new DateTime(1982, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bflong@comcast.net",
                            Gender = "Female",
                            Name = "Latisha Skerrett",
                            Salutation = 2
                        },
                        new
                        {
                            CompetitorId = 6,
                            Country = "Iceland",
                            Dob = new DateTime(1982, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "juliano@yahoo.com",
                            Gender = "Male",
                            Name = "Bernice Moorman",
                            Salutation = 0
                        },
                        new
                        {
                            CompetitorId = 7,
                            Country = "Northern Mariana Islands",
                            Dob = new DateTime(1983, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hmbrand@att.net",
                            Gender = "Male",
                            Name = "Chasity Wesolowski",
                            Salutation = 0
                        },
                        new
                        {
                            CompetitorId = 8,
                            Country = "Indonesia",
                            Dob = new DateTime(1984, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ninenine@msn.com",
                            Gender = "Female",
                            Name = "Mike Pautz",
                            Salutation = 1
                        },
                        new
                        {
                            CompetitorId = 9,
                            Country = "Azerbaijan",
                            Dob = new DateTime(1984, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "oracle@verizon.net",
                            Gender = "Male",
                            Name = "Isela Spiegel",
                            Salutation = 1
                        },
                        new
                        {
                            CompetitorId = 10,
                            Country = "Solomon Islands",
                            Dob = new DateTime(1984, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hermanab@msn.com",
                            Gender = "Male",
                            Name = "Shizue Theiss",
                            Salutation = 0
                        },
                        new
                        {
                            CompetitorId = 11,
                            Country = "Sweden",
                            Dob = new DateTime(1985, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tromey@gmail.com",
                            Gender = "Female",
                            Name = "Brandon Musgrove",
                            Salutation = 2
                        },
                        new
                        {
                            CompetitorId = 12,
                            Country = "Australia",
                            Dob = new DateTime(1986, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bogjobber@yahoo.com",
                            Gender = "Female",
                            Name = "Palmira Halbert",
                            Salutation = 2
                        },
                        new
                        {
                            CompetitorId = 13,
                            Country = "South Korea",
                            Dob = new DateTime(1988, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "irving@optonline.net",
                            Gender = "Female",
                            Name = "Lewis Hohl",
                            Salutation = 0
                        },
                        new
                        {
                            CompetitorId = 14,
                            Country = "Christmas Island",
                            Dob = new DateTime(1989, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cliffordj@mac.com",
                            Gender = "Male",
                            Name = "Dottie Hitchens",
                            Salutation = 2
                        },
                        new
                        {
                            CompetitorId = 15,
                            Country = "Wallis and Futuna",
                            Dob = new DateTime(1989, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dkasak@outlook.com",
                            Gender = "Male",
                            Name = "Kristine Guidry",
                            Salutation = 0
                        },
                        new
                        {
                            CompetitorId = 16,
                            Country = "Kiribati",
                            Dob = new DateTime(1989, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "petersen@mac.com",
                            Gender = "Female",
                            Name = "Carita Schlegel",
                            Salutation = 2
                        },
                        new
                        {
                            CompetitorId = 17,
                            Country = "Equatorial Guinea",
                            Dob = new DateTime(1990, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "wojciech@optonline.net",
                            Gender = "Male",
                            Name = "Mattie Tally",
                            Salutation = 0
                        },
                        new
                        {
                            CompetitorId = 18,
                            Country = "Liechtenstein",
                            Dob = new DateTime(1990, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "odlyzko@comcast.net",
                            Gender = "Male",
                            Name = "Craig Kimpel",
                            Salutation = 1
                        },
                        new
                        {
                            CompetitorId = 19,
                            Country = "France",
                            Dob = new DateTime(1992, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "retoh@gmail.com",
                            Gender = "Female",
                            Name = "Susy Mullett",
                            Salutation = 1
                        },
                        new
                        {
                            CompetitorId = 20,
                            Country = "Greenland",
                            Dob = new DateTime(1993, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mgemmons@att.net",
                            Gender = "Male",
                            Name = "Arvilla Tedrow",
                            Salutation = 0
                        },
                        new
                        {
                            CompetitorId = 21,
                            Country = "Bouvet Island",
                            Dob = new DateTime(1994, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tezbo@live.com",
                            Gender = "Male",
                            Name = "Julie Wimbish",
                            Salutation = 2
                        },
                        new
                        {
                            CompetitorId = 22,
                            Country = "Saint Martin",
                            Dob = new DateTime(1994, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "wildfire@yahoo.com",
                            Gender = "Female",
                            Name = "Sasha Shufelt",
                            Salutation = 1
                        },
                        new
                        {
                            CompetitorId = 23,
                            Country = "Norway",
                            Dob = new DateTime(1994, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "juliano@icloud.com",
                            Gender = "Male",
                            Name = "Janett Wenger",
                            Salutation = 0
                        },
                        new
                        {
                            CompetitorId = 24,
                            Country = "Russia",
                            Dob = new DateTime(1996, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "drewf@yahoo.ca",
                            Gender = "Male",
                            Name = "Carroll Pogue",
                            Salutation = 2
                        },
                        new
                        {
                            CompetitorId = 25,
                            Country = "French Southern Territories",
                            Dob = new DateTime(1997, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "crandall@sbcglobal.net",
                            Gender = "Female",
                            Name = "Helen Kerry",
                            Salutation = 1
                        },
                        new
                        {
                            CompetitorId = 26,
                            Country = "Olympics",
                            Dob = new DateTime(1982, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "staffelb@comcast.net",
                            Gender = "Female",
                            Name = "Marta Belle",
                            Salutation = 1
                        },
                        new
                        {
                            CompetitorId = 27,
                            Country = "Olympics",
                            Dob = new DateTime(1983, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mcnihil@aol.com",
                            Gender = "Male",
                            Name = "Kristel Ringer",
                            Salutation = 1
                        },
                        new
                        {
                            CompetitorId = 28,
                            Country = "Olympics",
                            Dob = new DateTime(1983, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "airship@gmail.com",
                            Gender = "Female",
                            Name = "Georgetta Pelham",
                            Salutation = 0
                        },
                        new
                        {
                            CompetitorId = 29,
                            Country = "Olympics",
                            Dob = new DateTime(1996, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "shaffei@icloud.com",
                            Gender = "Male",
                            Name = "Rosalinda Gorrell",
                            Salutation = 1
                        },
                        new
                        {
                            CompetitorId = 30,
                            Country = "Olympics",
                            Dob = new DateTime(1997, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "oechslin@gmail.com",
                            Gender = "Male",
                            Name = "Tomasa Vendetti",
                            Salutation = 2
                        });
                });

            modelBuilder.Entity("SportsManagementSystem.Models.CompetitorGames", b =>
                {
                    b.Property<int>("CompetitorId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.HasKey("CompetitorId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("CompetitorGames");

                    b.HasData(
                        new
                        {
                            CompetitorId = 1,
                            GameId = 2
                        },
                        new
                        {
                            CompetitorId = 2,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 3,
                            GameId = 2
                        },
                        new
                        {
                            CompetitorId = 4,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 5,
                            GameId = 3
                        },
                        new
                        {
                            CompetitorId = 6,
                            GameId = 3
                        },
                        new
                        {
                            CompetitorId = 7,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 8,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 9,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 10,
                            GameId = 3
                        },
                        new
                        {
                            CompetitorId = 11,
                            GameId = 3
                        },
                        new
                        {
                            CompetitorId = 12,
                            GameId = 3
                        },
                        new
                        {
                            CompetitorId = 13,
                            GameId = 2
                        },
                        new
                        {
                            CompetitorId = 14,
                            GameId = 2
                        },
                        new
                        {
                            CompetitorId = 15,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 16,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 17,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 18,
                            GameId = 2
                        },
                        new
                        {
                            CompetitorId = 19,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 20,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 21,
                            GameId = 2
                        },
                        new
                        {
                            CompetitorId = 22,
                            GameId = 3
                        },
                        new
                        {
                            CompetitorId = 23,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 24,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 25,
                            GameId = 2
                        },
                        new
                        {
                            CompetitorId = 26,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 27,
                            GameId = 3
                        },
                        new
                        {
                            CompetitorId = 28,
                            GameId = 1
                        },
                        new
                        {
                            CompetitorId = 29,
                            GameId = 2
                        });
                });

            modelBuilder.Entity("SportsManagementSystem.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeatureEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorldRecord")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventId");

                    b.HasIndex("GameId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("SportsManagementSystem.Models.EventOutcome", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("CompetitorId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("EventId", "CompetitorId");

                    b.HasIndex("CompetitorId");

                    b.ToTable("EventOutcomes");
                });

            modelBuilder.Entity("SportsManagementSystem.Models.EventPhoto", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoTags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhotoId");

                    b.HasIndex("EventId");

                    b.ToTable("EventPhotos");
                });

            modelBuilder.Entity("SportsManagementSystem.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationInHours")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RulesBooklet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            Code = "RUN1234",
                            Description = "Competitors run around a track ",
                            DurationInHours = 4,
                            Name = "Running",
                            RulesBooklet = "/Rules/RUN1234.pdf"
                        },
                        new
                        {
                            GameId = 2,
                            Code = "CYC1234",
                            Description = "Competitors Cycle around a track",
                            DurationInHours = 2,
                            Name = "Cycling",
                            RulesBooklet = "/Rules/CYC1234.pdf"
                        },
                        new
                        {
                            GameId = 3,
                            Code = "SWI1234",
                            Description = "Competitors do laps in a pool",
                            DurationInHours = 1,
                            Name = "Swimming",
                            RulesBooklet = "/Rules/SWI1234.pdf"
                        });
                });

            modelBuilder.Entity("SportsManagementSystem.Models.CompetitorGames", b =>
                {
                    b.HasOne("SportsManagementSystem.Models.Competitor", "Competitor")
                        .WithMany("CompetitorGames")
                        .HasForeignKey("CompetitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsManagementSystem.Models.Game", "Game")
                        .WithMany("CompetitorGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SportsManagementSystem.Models.Event", b =>
                {
                    b.HasOne("SportsManagementSystem.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SportsManagementSystem.Models.EventOutcome", b =>
                {
                    b.HasOne("SportsManagementSystem.Models.Competitor", "Competitor")
                        .WithMany()
                        .HasForeignKey("CompetitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsManagementSystem.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SportsManagementSystem.Models.EventPhoto", b =>
                {
                    b.HasOne("SportsManagementSystem.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
